{"mappings":"YAGA,IAAYA,EAoBZ,SAASC,EAAUC,EAAQC,EAAUC,GACnCC,QAAQC,IAAI,CAACH,WAAUC,UAEvBC,QAAQC,IAAIJ,E,CAGd,SAASK,EAAQC,EAAOL,EAAUC,GAChCC,QAAQC,IAAI,CAACH,WAAUC,UAEvBC,QAAQC,IAAIE,E,CAGd,SAASC,EAAcN,EAAUC,GAE/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAE5B,IAAMC,EAAgBC,KAAKC,SAAW,GAErCC,YAAW,WAERH,EACFF,EAAQ,uBAAwCM,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAErDQ,EAAK,sBAAqCK,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,GAEnDA,E,KA7CSJ,EAEN,QAFkBkB,SAASC,cAAcnB,IAEhCoB,iBAAiB,UAEhC,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,OAAOH,EAAMI,cAAcC,OAAOC,OAC1CC,EAAUJ,OAAOH,EAAMI,cAAcrB,MAAMuB,OAC3CE,EAAOL,OAAOH,EAAMI,cAAcI,KAAKF,OAEpCG,EAAI,EAAGA,EAAIP,EAAOO,GAAK,EAAG,CAIjCrB,EAHeqB,EAAE,EACLF,EAAUE,EAAID,GAGvBE,KAAK9B,GACL+B,MAAMzB,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet getEl = selector => document.querySelector(selector);\n\ngetEl('.form').addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const count = Number(event.currentTarget.amount.value)\n  const delayEl = Number(event.currentTarget.delay.value)\n  const step = Number(event.currentTarget.step.value)\n  \n  for (let i = 0; i < count; i += 1) {\n    let position = i+1;\n    let delay = delayEl + i * step;\n        \n    createPromise(position, delay)\n      .then(onSuccess)\n      .catch(onError);       \n  }\n}\n\nfunction onSuccess(result, position, delay) {\n  console.log({position, delay})\n    // Notiflix.Notify.success(result);\n  console.log(result)\n  }\n\nfunction onError(error, position, delay) {\n  console.log({position, delay})\n    // Notiflix.Notify.failure(error);\n  console.log(error)\n  }\n\nfunction createPromise(position, delay) {\n    \n  return new Promise((resolve, reject) => {\n\n   const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n     \n   if (shouldResolve) {\n     resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n}, delay)\n  }) \n \n}\n\n\n\n"],"names":["selector","$ce04d3a99e08e73b$var$onSuccess","result","position","delay","console","log","$ce04d3a99e08e73b$var$onError","error","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","count","Number","currentTarget","amount","value","delayEl","step","i","then","catch"],"version":3,"file":"03-promises.fabda678.js.map"}